{"ast":null,"code":"import React,{useState,useEffect}from'react';import SortButtons from'../components/SortButtons';import useFetchData from'../hooks/useFetchData';import DataTable from'../components/DataTable';import FilterForm from'../components/FilterForm';import'../styles/HomePage.css';import valueglanceLogo from'../images/valueglance.png';// HomePage component definition\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomePage=()=>{// Fetch data from the API\nconst{data,loading,error}=useFetchData(\"https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual&apikey=4TiqIE3kxLx0SCU7HqNhURgxpkdgA19h\");// State to hold the filtered data\nconst[filteredData,setFilteredData]=useState(data||[]);// Update filteredData when data changes\nuseEffect(()=>{if(data){setFilteredData(data);}},[data]);// Function to handle filtering of data based on filter criteria\nconst handleFilter=filters=>{const{dateRange,revenueRange,netIncomeRange}=filters;const[startDate,endDate]=dateRange;const[minRevenue,maxRevenue]=revenueRange;const[minNetIncome,maxNetIncome]=netIncomeRange;// Filter the data based on the provided criteria\nconst filtered=data.filter(item=>{const date=new Date(item.date).getFullYear();const startYear=new Date(startDate).getFullYear();const endYear=new Date(endDate).getFullYear();return date>=startYear&&date<=endYear&&item.revenue>=minRevenue&&item.revenue<=maxRevenue&&item.netIncome>=minNetIncome&&item.netIncome<=maxNetIncome;});// Update the state with the filtered data\nsetFilteredData(filtered);};// Function to handle sorting of data based on a column and order\nconst handleSort=(column,order)=>{const sortKey=column;const ascending=order==='asc';const sorted=[...filteredData].sort((a,b)=>{if(ascending){return a[sortKey]>b[sortKey]?1:-1;}else{return a[sortKey]<b[sortKey]?1:-1;}});setFilteredData(sorted);};// Render loading state\nif(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Render error state\nif(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error fetching data: \",error]});// Render the main content\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"img\",{src:valueglanceLogo,alt:\"ValueGlance Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Financial Data Filtering App\"}),/*#__PURE__*/_jsx(FilterForm,{onFilter:handleFilter}),/*#__PURE__*/_jsx(SortButtons,{onSort:handleSort}),/*#__PURE__*/_jsx(\"div\",{className:\"data-table\",children:/*#__PURE__*/_jsx(DataTable,{data:filteredData})})]});};export default HomePage;","map":{"version":3,"names":["React","useState","useEffect","SortButtons","useFetchData","DataTable","FilterForm","valueglanceLogo","jsx","_jsx","jsxs","_jsxs","HomePage","data","loading","error","filteredData","setFilteredData","handleFilter","filters","dateRange","revenueRange","netIncomeRange","startDate","endDate","minRevenue","maxRevenue","minNetIncome","maxNetIncome","filtered","filter","item","date","Date","getFullYear","startYear","endYear","revenue","netIncome","handleSort","column","order","sortKey","ascending","sorted","sort","a","b","children","className","src","alt","onFilter","onSort"],"sources":["E:/Personal Projects/Financial-Data-Filtering-App/financial-data-filtering-app/src/pages/HomePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SortButtons from '../components/SortButtons';\nimport useFetchData from '../hooks/useFetchData';\nimport { FinancialData, FilterCriteria } from '../types';\nimport DataTable from '../components/DataTable';\nimport FilterForm from '../components/FilterForm';\nimport '../styles/HomePage.css';\nimport valueglanceLogo from '../images/valueglance.png';\n\n// HomePage component definition\nconst HomePage: React.FC = () => {\n    // Fetch data from the API\n    const { data, loading, error } = useFetchData(`https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual&apikey=4TiqIE3kxLx0SCU7HqNhURgxpkdgA19h`);\n    \n    // State to hold the filtered data\n    const [filteredData, setFilteredData] = useState<FinancialData[]>(data || []);\n\n    // Update filteredData when data changes\n    useEffect(() => {\n        if (data) {\n            setFilteredData(data);\n        }\n    }, [data]);\n\n    // Function to handle filtering of data based on filter criteria\n    const handleFilter = (filters: FilterCriteria) => {\n        const { dateRange, revenueRange, netIncomeRange } = filters;\n        const [startDate, endDate] = dateRange;\n        const [minRevenue, maxRevenue] = revenueRange;\n        const [minNetIncome, maxNetIncome] = netIncomeRange;\n\n        // Filter the data based on the provided criteria\n        const filtered = data.filter(item => {\n            const date = new Date(item.date).getFullYear();\n            const startYear = new Date(startDate).getFullYear();\n            const endYear = new Date(endDate).getFullYear();\n            return (\n                date >= startYear && date <= endYear &&\n                item.revenue >= minRevenue && item.revenue <= maxRevenue &&\n                item.netIncome >= minNetIncome && item.netIncome <= maxNetIncome\n            );\n        });\n\n        // Update the state with the filtered data\n        setFilteredData(filtered);\n    };\n\n    // Function to handle sorting of data based on a column and order\n    const handleSort = (column: string, order: 'asc' | 'desc') => {\n        const sortKey = column as keyof FinancialData;\n        const ascending = order === 'asc';\n        const sorted = [...filteredData].sort((a, b) => {\n            if (ascending) {\n                return a[sortKey] > b[sortKey] ? 1 : -1;\n            } else {\n                return a[sortKey] < b[sortKey] ? 1 : -1;\n            }\n        });\n        setFilteredData(sorted);\n    };\n\n    // Render loading state\n    if (loading) return <div>Loading...</div>;\n    \n    // Render error state\n    if (error) return <div>Error fetching data: {error}</div>;\n\n    // Render the main content\n    return (\n        <div className=\"container\">\n            <img src={valueglanceLogo} alt=\"ValueGlance Logo\" className=\"logo\" />\n            <h1>Financial Data Filtering App</h1>\n            <FilterForm onFilter={handleFilter} />\n            <SortButtons onSort={handleSort} />\n            <div className=\"data-table\">\n                <DataTable data={filteredData} />\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}