{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal Projects\\\\Financial-Data-Filtering-App\\\\financial-data-filtering-app\\\\src\\\\pages\\\\HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useFetchData from '../hooks/useFetchData';\nimport DataTable from '../components/DataTable';\nimport FilterForm from '../components/FilterForm';\nimport '../styles/HomePage.css';\n\n// HomePage component definition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  // Fetch data from the API\n  const {\n    data,\n    loading,\n    error\n  } = useFetchData(`https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual&apikey=4TiqIE3kxLx0SCU7HqNhURgxpkdgA19h`);\n\n  // State to hold the filtered data\n  const [filteredData, setFilteredData] = useState(data || []);\n\n  // State to hold the search query and search results\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Update filteredData when data changes\n  useEffect(() => {\n    if (data) {\n      setFilteredData(data);\n    }\n  }, [data]);\n\n  // Function to handle filtering of data based on filter criteria\n  const handleFilter = filters => {\n    const {\n      dateRange,\n      revenueRange,\n      netIncomeRange\n    } = filters;\n    const [startDate, endDate] = dateRange;\n    const [minRevenue, maxRevenue] = revenueRange;\n    const [minNetIncome, maxNetIncome] = netIncomeRange;\n\n    // Filter the data based on the provided criteria\n    const filtered = data.filter(item => {\n      const date = new Date(item.date).getFullYear();\n      const startYear = new Date(startDate).getFullYear();\n      const endYear = new Date(endDate).getFullYear();\n      const revenue = item.revenue;\n      const netIncome = item.netIncome;\n      return date >= startYear && date <= endYear && revenue >= minRevenue && revenue <= maxRevenue && netIncome >= minNetIncome && netIncome <= maxNetIncome;\n    });\n    setFilteredData(filtered);\n  };\n\n  // Function to handle search query change\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  // Function to fetch search results\n  const fetchSearchResults = async () => {\n    try {\n      const response = await fetch(`https://financialmodelingprep.com/api/v3/search?query=${searchQuery}`);\n      const results = await response.json();\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n\n  // Fetch search results when searchQuery changes\n  useEffect(() => {\n    if (searchQuery) {\n      fetchSearchResults();\n    }\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleSearchChange,\n      placeholder: \"Search by symbol or company name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [result.name, \" (\", result.symbol, \")\"]\n      }, result.symbol, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterForm, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"interfaceSortButtons\", {\n      onSort: (column, order) => {\n        // Implement the sorting logic here\n        const sortedData = [...filteredData].sort((a, b) => {\n          if (order === 'asc') {\n            return a[column] > b[column] ? 1 : -1;\n          } else {\n            return a[column] < b[column] ? 1 : -1;\n          }\n        });\n        setFilteredData(sortedData);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error loading data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      data: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"6o9sEMd4sq7VfPWABwnr5d9aky8=\", false, function () {\n  return [useFetchData];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useFetchData","DataTable","FilterForm","jsxDEV","_jsxDEV","HomePage","_s","data","loading","error","filteredData","setFilteredData","searchQuery","setSearchQuery","searchResults","setSearchResults","handleFilter","filters","dateRange","revenueRange","netIncomeRange","startDate","endDate","minRevenue","maxRevenue","minNetIncome","maxNetIncome","filtered","filter","item","date","Date","getFullYear","startYear","endYear","revenue","netIncome","handleSearchChange","e","target","value","fetchSearchResults","response","fetch","results","json","console","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","result","name","symbol","onFilter","onSort","column","order","sortedData","sort","a","b","_c","$RefreshReg$"],"sources":["E:/Personal Projects/Financial-Data-Filtering-App/financial-data-filtering-app/src/pages/HomePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SortButtons from '../components/SortButtons';\nimport useFetchData from '../hooks/useFetchData';\nimport { FinancialData, FilterCriteria } from '../types';\nimport DataTable from '../components/DataTable';\nimport FilterForm from '../components/FilterForm';\nimport '../styles/HomePage.css';\n\n// HomePage component definition\nconst HomePage: React.FC = () => {\n    // Fetch data from the API\n    const { data, loading, error } = useFetchData(`https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual&apikey=4TiqIE3kxLx0SCU7HqNhURgxpkdgA19h`);\n    \n    // State to hold the filtered data\n    const [filteredData, setFilteredData] = useState<FinancialData[]>(data || []);\n\n    // State to hold the search query and search results\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResults, setSearchResults] = useState<{ symbol: string; name: string }[]>([]);\n\n    // Update filteredData when data changes\n    useEffect(() => {\n        if (data) {\n            setFilteredData(data);\n        }\n    }, [data]);\n\n    // Function to handle filtering of data based on filter criteria\n    const handleFilter = (filters: FilterCriteria) => {\n        const { dateRange, revenueRange, netIncomeRange } = filters;\n        const [startDate, endDate] = dateRange;\n        const [minRevenue, maxRevenue] = revenueRange;\n        const [minNetIncome, maxNetIncome] = netIncomeRange;\n\n        // Filter the data based on the provided criteria\n        const filtered = data.filter(item => {\n            const date = new Date(item.date).getFullYear();\n            const startYear = new Date(startDate).getFullYear();\n            const endYear = new Date(endDate).getFullYear();\n            const revenue = item.revenue;\n            const netIncome = item.netIncome;\n\n            return (\n                date >= startYear &&\n                date <= endYear &&\n                revenue >= minRevenue &&\n                revenue <= maxRevenue &&\n                netIncome >= minNetIncome &&\n                netIncome <= maxNetIncome\n            );\n        });\n\n        setFilteredData(filtered);\n    };\n\n    // Function to handle search query change\n    const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchQuery(e.target.value);\n    };\n\n    // Function to fetch search results\n    const fetchSearchResults = async () => {\n        try {\n            const response = await fetch(`https://financialmodelingprep.com/api/v3/search?query=${searchQuery}`);\n            const results = await response.json();\n            setSearchResults(results);\n        } catch (error) {\n            console.error('Error fetching search results:', error);\n        }\n    };\n\n    // Fetch search results when searchQuery changes\n    useEffect(() => {\n        if (searchQuery) {\n            fetchSearchResults();\n        }\n    }, [searchQuery]);\n\n    return (\n        <div className=\"homepage\">\n            <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={handleSearchChange}\n                placeholder=\"Search by symbol or company name\"\n            />\n            <ul>\n                {searchResults.map(result => (\n                    <li key={result.symbol}>{result.name} ({result.symbol})</li>\n                ))}\n            </ul>\n            <FilterForm onFilter={handleFilter} />\n            <interfaceSortButtons onSort={(column: keyof FinancialData, order) => {\n                // Implement the sorting logic here\n                const sortedData = [...filteredData].sort((a, b) => {\n                    if (order === 'asc') {\n                        return a[column] > b[column] ? 1 : -1;\n                    } else {\n                        return a[column] < b[column] ? 1 : -1;\n                    }\n                });\n                setFilteredData(sortedData);\n            }} />\n            {loading ? (\n                <p>Loading...</p>\n            ) : error ? (\n                <p>Error loading data</p>\n            ) : (\n                <DataTable data={filteredData} />\n            )}\n        </div>\n    );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}