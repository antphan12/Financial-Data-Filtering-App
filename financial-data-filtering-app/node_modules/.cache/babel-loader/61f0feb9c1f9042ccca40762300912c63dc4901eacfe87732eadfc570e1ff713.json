{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useFetchData = apiKey => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual&apikey=${apiKey}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n        } else {\n          setError(String(error));\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [apiKey]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useFetchData, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\nexport default useFetchData;","map":{"version":3,"names":["useEffect","useState","useFetchData","apiKey","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","result","json","message","String"],"sources":["E:/Personal Projects/Financial-Data-Filtering-App/financial-data-filtering-app/src/hooks/useFetchData.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useFetchData = (apiKey: string) => {\n    const [data, setData] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(`https://financialmodelingprep.com/api/v3/income-statement/AAPL?period=annual&apikey=${apiKey}`);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const result = await response.json();\n                setData(result);\n            } catch (error) {\n                if (error instanceof Error) {\n                    setError(error.message);\n                } else {\n                    setError(String(error));\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [apiKey]);\n\n    return { data, loading, error };\n};\n\nexport default useFetchData;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAIC,MAAc,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uFAAuFV,MAAM,EAAE,CAAC;QAC7H,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCX,OAAO,CAACU,MAAM,CAAC;MACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACZ,IAAIA,KAAK,YAAYM,KAAK,EAAE;UACxBL,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;QAC3B,CAAC,MAAM;UACHR,QAAQ,CAACS,MAAM,CAACV,KAAK,CAAC,CAAC;QAC3B;MACJ,CAAC,SAAS;QACND,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,OAAO;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACL,EAAA,CA7BIF,YAAY;AA+BlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}