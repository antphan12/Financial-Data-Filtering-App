{"ast":null,"code":"import{useState,useEffect}from'react';const useFetchData=url=>{const[data,setData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchData=async()=>{try{const response=await fetch(url);if(!response.ok){throw new Error('Network response was not ok');}const result=await response.json();setData(result);}catch(error){if(error instanceof Error){setError(error.message);}else{setError(String(error));}}finally{setLoading(false);}};fetchData();},[url]);return{data,loading,error};};export default useFetchData;","map":{"version":3,"names":["useState","useEffect","useFetchData","url","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","result","json","message","String"],"sources":["E:/Personal Projects/Financial-Data-Filtering-App/financial-data-filtering-app/src/hooks/useFetchData.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { FinancialData } from '../types';\n\nconst useFetchData = (url: string) => {\n    const [data, setData] = useState<FinancialData[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const result = await response.json();\n                setData(result);\n            } catch (error) {\n                if (error instanceof Error) {\n                    setError(error.message);\n                } else {\n                    setError(String(error));\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [url]);\n\n    return { data, loading, error };\n};\n\nexport default useFetchData;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAG3C,KAAM,CAAAC,YAAY,CAAIC,GAAW,EAAK,CAClC,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGL,QAAQ,CAAkB,EAAE,CAAC,CACrD,KAAM,CAACM,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAU,IAAI,CAAC,CACrD,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAgB,IAAI,CAAC,CAEvDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAS,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACT,GAAG,CAAC,CACjC,GAAI,CAACQ,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAClD,CACA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACpCX,OAAO,CAACU,MAAM,CAAC,CACnB,CAAE,MAAOP,KAAK,CAAE,CACZ,GAAIA,KAAK,WAAY,CAAAM,KAAK,CAAE,CACxBL,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC,CAC3B,CAAC,IAAM,CACHR,QAAQ,CAACS,MAAM,CAACV,KAAK,CAAC,CAAC,CAC3B,CACJ,CAAC,OAAS,CACND,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDG,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,CAACP,GAAG,CAAC,CAAC,CAET,MAAO,CAAEC,IAAI,CAAEE,OAAO,CAAEE,KAAM,CAAC,CACnC,CAAC,CAED,cAAe,CAAAN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}